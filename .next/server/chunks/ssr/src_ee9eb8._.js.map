{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/hooks/use-refetch.ts"],"sourcesContent":["import { useQueryClient } from '@tanstack/react-query'\n\nconst useRefetch = () => {\n    // refetches all active trpc queries\n    const queryClient = useQueryClient()\n    return async () => {\n        await queryClient.refetchQueries({ type: 'active' })\n    }\n}\n\nexport default useRefetch"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa;IACf,oCAAoC;IACpC,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IACjC,OAAO;QACH,MAAM,YAAY,cAAc,CAAC;YAAE,MAAM;QAAS;IACtD;AACJ;uCAEe"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/stripe.ts"],"sourcesContent":["'use server'\nimport Stripe from 'stripe'\nimport { auth } from \"@clerk/nextjs/server\";\nimport { redirect } from \"next/navigation\";\nimport { creditsToDollars } from '@/constants';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n    apiVersion: '2024-10-28.acacia',\n})\n\n// 50 credits per dollar\n\n\nexport async function createCheckoutSession(credits: number) {\n    const { userId } = await auth();\n\n    if (!userId) {\n        throw new Error('User not found');\n    }\n\n    const session = await stripe.checkout.sessions.create({\n        payment_method_types: ['card'],\n        line_items: [\n            {\n                price_data: {\n                    currency: 'usd',\n                    product_data: {\n                        name: `${credits} GitChat Credits`,\n                    },\n                    unit_amount: Math.round((credits / creditsToDollars) * 100),\n                },\n                quantity: 1,\n            },\n        ],\n        customer_creation: 'always',\n        mode: 'payment',\n        success_url: `${process.env.NEXT_PUBLIC_URL}/create`,\n        cancel_url: `${process.env.NEXT_PUBLIC_URL}/billing`,\n        client_reference_id: userId.toString(),\n        metadata: {\n            credits,\n        },\n    });\n\n    redirect(session.url!);\n}\n"],"names":[],"mappings":";;;;;IAasB"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/(protected)/create/page.tsx"],"sourcesContent":["'use client'\nimport { api } from '@/trpc/react';\nimport { useRouter } from 'next/navigation';\nimport React, { useReducer, useRef } from 'react'\nimport { toast } from 'sonner';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useForm } from 'react-hook-form';\nimport { AlertTriangle, ArrowRight, FileText, Github, Info, Key } from 'lucide-react';\nimport useRefetch from '@/hooks/use-refetch';\nimport { createCheckoutSession } from '@/lib/stripe';\n\n\ntype FormInput = {\n    repoUrl: string\n    projcetName: string\n    githubToken?: string\n}\n\nconst CreateProjectPage = () => {\n    const { register, handleSubmit, reset } = useForm<FormInput>();\n    const linkRepo = api.project.create.useMutation();\n    const checkCredits = api.project.checkCredits.useMutation()\n    const refetch = useRefetch()\n\n    const router = useRouter()\n    const onSubmit = async (data: FormInput) => {\n        if (!!!checkCredits.data) {\n            checkCredits.mutate({\n                githubUrl: data.repoUrl,\n                githubToken: data.githubToken,\n            }, {\n                onError: () => {\n                    toast.error(\"GitHub API rate limit exceeded, please try again later.\");\n                },\n            })\n        } else {\n            linkRepo.mutate({\n                githubUrl: data.repoUrl,\n                name: data.projcetName,\n                githubToken: data.githubToken,\n            }, {\n                onSuccess: () => {\n                    toast.success(\"Project created successfully\");\n                    router.push(`/dashboard`)\n                    refetch()\n                    reset()\n                },\n                onError: () => {\n                    toast.error(\"Failed to create project\");\n                },\n            });\n        }\n    };\n\n    const hasEnoughCredits = checkCredits.data?.credits ? checkCredits.data?.credits >= checkCredits.data?.fileCount : true\n\n    return (\n        <div className='flex items-center gap-12 h-full justify-center'>\n            {/* TODO: add github api search */}\n            <img src='/undraw_github.svg' className='h-56 w-auto' />\n            <div>\n                <div>\n                    <h1 className='font-semibold text-2xl'>Link your GitHub Repository</h1>\n                    <p className='text-sm text-muted-foreground'>\n                        Enter the URL of your GitHub repository to link it to GitChat.\n                    </p>\n                </div>\n                <div className=\"h-4\"></div>\n                <div>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Input\n                            icon={FileText}\n                            required\n                            {...register(\"projcetName\", { required: true })}\n                            placeholder=\"Project Name\"\n                        />\n                        <div className=\"h-2\"></div>\n                        <Input\n                            icon={Github}\n                            {...register(\"repoUrl\", { required: true })}\n                            required\n                            type='url'\n                            placeholder=\"Github Repository URL\"\n                        />\n                        <div className=\"h-2\"></div>\n                        <Input\n                            icon={Key}\n                            {...register(\"githubToken\")}\n                            placeholder=\"GitHub Token (optional, for private repositories)\"\n                        />\n\n                        {!!checkCredits.data &&\n                            <>\n                                <div className=\"mt-4 bg-orange-50 px-4 py-2 rounded-md border border-orange-200 text-orange-700\">\n                                    <div className=\"flex items-center gap-2\">\n                                        <Info className='size-4' />\n                                        <p className='text-sm'>You will be charged <strong>{checkCredits.data?.fileCount}</strong> credits for this repository.</p>\n                                    </div>\n                                    <p className='text-sm text-blue-600 ml-6'>You have <strong>{checkCredits.data?.credits}</strong> credits remaining.</p>\n\n                                </div>\n                                {!hasEnoughCredits &&\n                                    <div className=\"mt-4 bg-red-50 px-4 py-2 rounded-md border border-red-200 text-red-700\">\n                                        <div className=\"flex items-center gap-2\">\n                                            <AlertTriangle className='size-4' />\n                                            <p className='text-sm text-red-500'>You do not have enough credits to create this project.</p>\n                                        </div>\n                                        <div className=\"h-2\"></div>\n                                        <Button type='button' variant='outline' onClick={() => createCheckoutSession(checkCredits.data?.fileCount - checkCredits.data?.credits)}>Buy {checkCredits.data?.fileCount - checkCredits.data?.credits} Credits</Button>\n                                    </div>\n                                }\n                            </>\n                        }\n\n                        <div className=\"h-4\"></div>\n                        <Button type=\"submit\" disabled={!hasEnoughCredits} isLoading={linkRepo.isPending || checkCredits.isPending}>\n                            {checkCredits.data ? 'Create Project' : 'Check Credits'} <ArrowRight className='size-4' />\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateProjectPage"],"names":[],"mappings":"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"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}